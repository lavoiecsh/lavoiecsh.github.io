"use strict";(self.webpackChunkproper_code=self.webpackChunkproper_code||[]).push([[3440],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},221:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={title:"Day 15: Beverage Bandits",tags:["Challenges","Advent","C#"]},l=void 0,i={permalink:"/2018/12/27/advent2018-15",source:"@site/blog/2018/12-27-advent2018-15.md",title:"Day 15: Beverage Bandits",description:"Finally came back to this problem.",date:"2018-12-27T00:00:00.000Z",formattedDate:"December 27, 2018",tags:[{label:"Challenges",permalink:"/tags/challenges"},{label:"Advent",permalink:"/tags/advent"},{label:"C#",permalink:"/tags/c"}],readingTime:.835,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Day 15: Beverage Bandits",tags:["Challenges","Advent","C#"]},prevItem:{title:"Advent of Code Conclusion",permalink:"/2019/01/03/advent2018"},nextItem:{title:"Day 25: Four-Dimensional Adventure",permalink:"/2018/12/27/advent2018-25"}},s={authorsImageUrls:[]},p=[],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Finally came back to this problem."),(0,a.kt)("p",null,"As for problem 24 with the immune system, the hardest part about this problem is making sure you read the description correctly. It took me a couple of attempts with the test cases before getting all the rules nailed down."),(0,a.kt)("p",null,"I went with 3 classes in this problem:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Map: containing a list of open tiles in the map and a list of units, this also contains the logic for playing a game (first part of the problem) and playing multiple games with different attack values for the elves (second part of the problem);"),(0,a.kt)("li",{parentName:"ul"},"Unit: defining the elves and goblins, this also contains the logic for how a unit plays his turn, attacks, moves, finds the nearest opponent, etc;"),(0,a.kt)("li",{parentName:"ul"},"Position: defining a position on the grid, this is usually not needed as it may be replaced by a simple tuple, but was useful as I added some fonctions to return adjacent positions and compare them directly.")))}m.isMDXComponent=!0}}]);
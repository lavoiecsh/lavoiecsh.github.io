"use strict";(self.webpackChunkproper_code=self.webpackChunkproper_code||[]).push([[5948],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),u=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||a;return r?o.createElement(m,i(i({ref:t},c),{},{components:r})):o.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:n,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2474:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=r(7462),n=(r(7294),r(3905));const a={title:"Proper Code",tags:["Blog","Update"]},i=void 0,l={permalink:"/2018/10/30/propercode",source:"@site/blog/2018/10-30-propercode.md",title:"Proper Code",description:"I started my programming career in a large waterfall company working on their C++ software. We had multiple layers of analysis documents describing what should be done to implement each feature. We had no unit tests. The software was so large the current version of Visual Studio couldn't handle it all. It took so much time to compile (over six hours to compile everything) that we were doing partial compilations refering to a nightly build and it still took over an hour to build if you had enough code modified. Launching the software to test your features often took over 5 minutes. We were working on two different features at the same time because of all the waiting and you worked on your features alone for weeks if not months at a time. The company was hiring developpers by batches of 20 to 30 and giving them two weeks of classes when they started. Refactoring was pretty much out of the question because we couldn't deliver features fast enough.",date:"2018-10-30T00:00:00.000Z",formattedDate:"October 30, 2018",tags:[{label:"Blog",permalink:"/tags/blog"},{label:"Update",permalink:"/tags/update"}],readingTime:1.79,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Proper Code",tags:["Blog","Update"]},prevItem:{title:"Book Review: Gang of Four",permalink:"/2018/11/06/gangoffour"},nextItem:{title:"Introduction",permalink:"/2018/09/20/indroduction"}},s={authorsImageUrls:[]},u=[],c={toc:u},p="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"I started my programming career in a large waterfall company working on their C++ software. We had multiple layers of analysis documents describing what should be done to implement each feature. We had no unit tests. The software was so large the current version of Visual Studio couldn't handle it all. It took so much time to compile (over six hours to compile everything) that we were doing partial compilations refering to a nightly build and it still took over an hour to build if you had enough code modified. Launching the software to test your features often took over 5 minutes. We were working on two different features at the same time because of all the waiting and you worked on your features alone for weeks if not months at a time. The company was hiring developpers by batches of 20 to 30 and giving them two weeks of classes when they started. Refactoring was pretty much out of the question because we couldn't deliver features fast enough."))}f.isMDXComponent=!0}}]);
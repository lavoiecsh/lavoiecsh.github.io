"use strict";(self.webpackChunkproper_code=self.webpackChunkproper_code||[]).push([[3161],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(r),u=o,f=m["".concat(p,".").concat(u)]||m[u]||d[u]||a;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9492:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={title:"Day 19: Go With The Flow",tags:["Challenges","Advent","C#"]},i=void 0,l={permalink:"/2018/12/19/advent2018-19",source:"@site/blog/2018/12-19-advent2018-19.md",title:"Day 19: Go With The Flow",description:"I'm starting to doubt my abilities as a programmer as more and more of the problems' second parts are winning over me.",date:"2018-12-19T00:00:00.000Z",formattedDate:"December 19, 2018",tags:[{label:"Challenges",permalink:"/tags/challenges"},{label:"Advent",permalink:"/tags/advent"},{label:"C#",permalink:"/tags/c"}],readingTime:1.6,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Day 19: Go With The Flow",tags:["Challenges","Advent","C#"]},prevItem:{title:"Day 20: A Regular Map",permalink:"/2018/12/20/advent2018-20"},nextItem:{title:"Day 18: Settlers of The North Pole",permalink:"/2018/12/18/advent2018-18"}},p={authorsImageUrls:[]},s=[],c={toc:s},m="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"I'm starting to doubt my abilities as a programmer as more and more of the problems' second parts are winning over me."),(0,o.kt)("p",null,"I reused most of the code I did in problem number 16 for this problem. It helped a lot for the first part of the problem. The only difference is that I set the instruction pointer to the correct register before starting the execution of the program."),(0,o.kt)("p",null,"This worked well for the first part of the problem, but the simple change of starting with ",(0,o.kt)("inlineCode",{parentName:"p"},"[1, 0, 0, 0, 0, 0]")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"[0, 0, 0, 0, 0, 0]")," for the second part made my program take a lot longer to execute. After a couple of vain attempts at optimization, I decided to go look on the advent subreddit, I found out most people reverse engineered their code into a simpler format."),(0,o.kt)("p",null,"After watching the register during the execution and the code for my program, I started out with this code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-C#"},"long r0 = 0;\nlong r1 = 10551383;\nlong r2 = 1;\nlong r4;\n\ndo\n{\n    r4 = 1;\n    do\n    {\n        if ((r2 * r4) == r1) r0 += r2;\n        r4++;\n    }\n    while (r4 <= r1);\n    r2++;\n}\nwhile (r2 <= r1);\nreturn r0.ToString();\n")),(0,o.kt)("p",null,"But even this took a while to compute, so I analyzed the inner loop a bit more and found out it's just checking if there is a factor of ",(0,o.kt)("inlineCode",{parentName:"p"},"r1/r2")," and adds it to ",(0,o.kt)("inlineCode",{parentName:"p"},"r0"),". I simplified the code to this and found my solution with it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-C#"}," long r0 = 0;\n const int r1 = 10551383;\n long r2 = 1;\n\ndo\n{\n    var r4 = (decimal) r1 / r2;\n    if (r4 == Math.Floor(r4)) r0 += r2;\n    r2++;\n}\nwhile (r2 <= r1);\nreturn r0.ToString();\n")),(0,o.kt)("p",null,"Finding the solution helped me regain a little confidence that I can solve the other problems I skipped previously with some similar work."))}d.isMDXComponent=!0}}]);